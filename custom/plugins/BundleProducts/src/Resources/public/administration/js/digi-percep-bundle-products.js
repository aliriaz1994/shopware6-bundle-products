!function(){var e={335:function(){},157:function(){},658:function(e,t,n){var i=n(335);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[e.id,i,""]]),i.locals&&(e.exports=i.locals),(0,n(534).A)("391cfeba",i,!0,{})},690:function(e,t,n){var i=n(157);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[e.id,i,""]]),i.locals&&(e.exports=i.locals),(0,n(534).A)("ac6fd632",i,!0,{})},534:function(e,t,n){"use strict";function i(e,t){for(var n=[],i={},s=0;s<t.length;s++){var a=t[s],l=a[0],o={id:e+":"+s,css:a[1],media:a[2],sourceMap:a[3]};i[l]?i[l].parts.push(o):n.push(i[l]={id:l,parts:[o]})}return n}n.d(t,{A:function(){return h}});var s,a="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!a)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var l={},o=a&&(document.head||document.getElementsByTagName("head")[0]),d=null,r=0,u=!1,c=function(){},p=null,m="data-vue-ssr-id",b="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function h(e,t,n,s){u=n,p=s||{};var a=i(e,t);return g(a),function(t){for(var n=[],s=0;s<a.length;s++){var o=l[a[s].id];o.refs--,n.push(o)}t?g(a=i(e,t)):a=[];for(var s=0;s<n.length;s++){var o=n[s];if(0===o.refs){for(var d=0;d<o.parts.length;d++)o.parts[d]();delete l[o.id]}}}}function g(e){for(var t=0;t<e.length;t++){var n=e[t],i=l[n.id];if(i){i.refs++;for(var s=0;s<i.parts.length;s++)i.parts[s](n.parts[s]);for(;s<n.parts.length;s++)i.parts.push(v(n.parts[s]));i.parts.length>n.parts.length&&(i.parts.length=n.parts.length)}else{for(var a=[],s=0;s<n.parts.length;s++)a.push(v(n.parts[s]));l[n.id]={id:n.id,refs:1,parts:a}}}}function f(){var e=document.createElement("style");return e.type="text/css",o.appendChild(e),e}function v(e){var t,n,i=document.querySelector("style["+m+'~="'+e.id+'"]');if(i){if(u)return c;i.parentNode.removeChild(i)}if(b){var s=r++;t=w.bind(null,i=d||(d=f()),s,!1),n=w.bind(null,i,s,!0)}else t=S.bind(null,i=f()),n=function(){i.parentNode.removeChild(i)};return t(e),function(i){i?(i.css!==e.css||i.media!==e.media||i.sourceMap!==e.sourceMap)&&t(e=i):n()}}var y=(s=[],function(e,t){return s[e]=t,s.filter(Boolean).join("\n")});function w(e,t,n,i){var s=n?"":i.css;if(e.styleSheet)e.styleSheet.cssText=y(t,s);else{var a=document.createTextNode(s),l=e.childNodes;l[t]&&e.removeChild(l[t]),l.length?e.insertBefore(a,l[t]):e.appendChild(a)}}function S(e,t){var n=t.css,i=t.media,s=t.sourceMap;if(i&&e.setAttribute("media",i),p.ssrId&&e.setAttribute(m,t.id),s&&(n+="\n/*# sourceURL="+s.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},t={};function n(i){var s=t[i];if(void 0!==s)return s.exports;var a=t[i]={id:i,exports:{}};return e[i](a,a.exports,n),a.exports}n.d=function(e,t){for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="bundles/digipercepbundleproducts/",window?.__sw__?.assetPath&&(n.p=window.__sw__.assetPath+"/bundles/digipercepbundleproducts/"),function(){"use strict";n(690);let{Component:e,Mixin:t}=Shopware,{Criteria:i}=Shopware.Data;e.register("digipercep-bundle-list",{template:'{% block digipercep_bundle_list %}\n    <sw-page class="digipercep-bundle-list">\n        <template #smart-bar-header>\n            <h2>\n                Bundles\n                <span v-if="!isLoading" class="sw-page__smart-bar-amount">\n                    ({{ total }})\n                </span>\n            </h2>\n        </template>\n\n        <template #smart-bar-actions>\n            <sw-button\n                    variant="primary"\n                    :routerLink="{ name: \'digipercep.bundle.create\' }">\n                Add Bundle\n            </sw-button>\n            <sw-button @click="onRefresh">\n                Refresh\n            </sw-button>\n        </template>\n\n        <template #content>\n            <div class="digipercep-bundle-list__content">\n                <sw-loader v-if="isLoading"></sw-loader>\n\n                <sw-data-grid\n                        v-else-if="bundles.length > 0"\n                        :dataSource="bundles"\n                        :columns="columns"\n                        :showSelection="false"\n                        :showActions="true"\n                        :isLoading="isLoading"\n                        identifier="digipercep-bundle-list">\n\n                    <template #column-discount="{ item }">\n                        <span v-if="item.discount">\n                            {{ item.discount }}{{ item.discountType === \'percentage\' ? \'%\' : \'\' }}\n                        </span>\n                        <span v-else>-</span>\n                    </template>\n\n                    <template #column-active="{ item }">\n                        <div class="sw-data-grid__cell-content" style="justify-content: center; display: flex;">\n                            <sw-icon\n                                    :name="item.active ? \'regular-checkmark-xs\' : \'regular-times-s\'"\n                                    size="small"\n                                    :class="item.active ? \'bundle-status-active\' : \'bundle-status-inactive\'">\n                            </sw-icon>\n                        </div>\n                    </template>\n\n                    <template #column-createdAt="{ item }">\n                        <span>{{ formatDate(item.createdAt) }}</span>\n                    </template>\n\n                    <template #actions="{ item }">\n                        <sw-context-menu-item\n                                :routerLink="{ name: \'digipercep.bundle.detail\', params: { id: item.id } }">\n                            Edit\n                        </sw-context-menu-item>\n                        <sw-context-menu-item\n                                variant="danger"\n                                @click="onDeleteItem(item.id)">\n                            Delete\n                        </sw-context-menu-item>\n                    </template>\n                </sw-data-grid>\n\n                <sw-empty-state\n                        v-else-if="!isLoading"\n                        title="No bundles yet"\n                        icon="default-shopping-paper-bag-product"\n                        subline="No bundles have been created yet.">\n                    <template #actions>\n                        <sw-button\n                                variant="primary"\n                                :routerLink="{ name: \'digipercep.bundle.create\' }">\n                            Add Bundle\n                        </sw-button>\n                    </template>\n                </sw-empty-state>\n            </div>\n        </template>\n    </sw-page>\n{% endblock %}',inject:["repositoryFactory","acl"],mixins:[t.getByName("notification")],data(){return{bundles:[],isLoading:!0,sortBy:"createdAt",sortDirection:"DESC",total:0,term:null,page:1,limit:25}},computed:{bundleRepository(){return this.repositoryFactory.create("digipercep_bundle")},columns(){return[{property:"name",dataIndex:"name",label:"Name",routerLink:"digipercep.bundle.detail",primary:!0,allowResize:!0,align:"center"},{property:"discount",dataIndex:"discount",label:"Discount",allowResize:!0,align:"center"},{property:"active",dataIndex:"active",label:"Active",allowResize:!0,align:"center"},{property:"createdAt",dataIndex:"createdAt",label:"Created At",allowResize:!0,align:"center"}]},listCriteria(){let e=new i(this.page,this.limit);return this.sortBy&&e.addSorting(i.sort(this.sortBy,this.sortDirection)),this.term&&e.setTerm(this.term),e}},metaInfo(){return{title:this.$createTitle("Bundle Products")}},created(){this.loadBundles()},methods:{async loadBundles(){this.isLoading=!0;try{let e=await this.bundleRepository.search(this.listCriteria,Shopware.Context.api);this.bundles=Array.from(e),this.total=e.total||0}catch(e){this.createNotificationError({message:`Error loading bundles: ${e.message}`}),this.bundles=[],this.total=0}finally{this.isLoading=!1}},formatDate(e){if(!e)return"-";try{let t=new Date(e);if(isNaN(t.getTime()))return e;return t.toLocaleDateString("en-GB",{day:"2-digit",month:"2-digit",year:"numeric",hour:"2-digit",minute:"2-digit"})}catch(t){return e}},onRefresh(){this.loadBundles()},onSearch(e){this.term=e,this.page=1,this.loadBundles()},onPageChange(e){this.page=e.page||1,this.limit=e.limit||25,this.loadBundles()},onSortColumn(e){this.sortBy===e.dataIndex?this.sortDirection="ASC"===this.sortDirection?"DESC":"ASC":(this.sortBy=e.dataIndex,this.sortDirection="ASC"),this.page=1,this.loadBundles()},async onDeleteItem(e){try{await this.bundleRepository.delete(e,Shopware.Context.api),this.createNotificationSuccess({message:"Bundle deleted successfully"}),this.loadBundles()}catch(e){this.createNotificationError({message:`Failed to delete bundle: ${e.message}`})}}}});let{Component:s,Mixin:a}=Shopware,{Criteria:l,EntityCollection:o}=Shopware.Data;s.register("digipercep-bundle-detail",{template:'\n{% block digipercep_bundle_detail %}\n    <sw-page class="digipercep-bundle-detail">\n        <template #smart-bar-header>\n            <h2>{{ bundle ? bundle.name : \'Bundle\' }}</h2>\n        </template>\n\n        <template #smart-bar-actions>\n            <sw-button-process\n                    :isLoading="isLoading"\n                    :processSuccess="isSaveSuccessful"\n                    variant="primary"\n                    @process-finish="saveFinish"\n                    @click="onSave">\n                Save\n            </sw-button-process>\n\n            <sw-button @click="onCancel">\n                Cancel\n            </sw-button>\n        </template>\n\n        <template #content>\n            <sw-card-view>\n                \n                <sw-card title="Bundle Information" :isLoading="isLoading">\n                    <sw-container columns="repeat(auto-fit, minmax(250px, 1fr))" gap="0 30px">\n                        <sw-text-field\n                                v-model:value="bundle.name"\n                                label="Bundle Name"\n                                placeholder="Enter bundle name"\n                                required>\n                        </sw-text-field>\n\n                        <sw-number-field\n                                v-model:value="bundle.discount"\n                                label="Discount"\n                                :min="0"\n                                :max="bundle.discountType === \'percentage\' ? 100 : null"\n                                :suffix="bundle.discountType === \'percentage\' ? \'%\' : \'\'"\n                                :step="0.01"\n                                :digits="2">\n                        </sw-number-field>\n\n                        <sw-single-select\n                                v-model:value="bundle.discountType"\n                                label="Discount Type"\n                                :options="discountTypeOptions">\n                        </sw-single-select>\n\n                        <sw-single-select\n                                v-model:value="bundle.displayMode"\n                                label="Display Mode"\n                                :options="displayModeOptions">\n                        </sw-single-select>\n\n                        <sw-number-field\n                                v-model:value="bundle.priority"\n                                label="Priority"\n                                :min="0"\n                                :step="1"\n                                :digits="0">\n                        </sw-number-field>\n                    </sw-container>\n\n                    <sw-container columns="repeat(auto-fit, minmax(250px, 1fr))" gap="0 30px">\n                        <sw-switch-field\n                                v-model="bundle.active"\n                                label="Active">\n                        </sw-switch-field>\n                    </sw-container>\n                </sw-card>\n\n                \n                <sw-card title="Bundle Products" :isLoading="isProductsLoading">\n                    <div v-if="!isCreateMode" class="sw-card__content">\n                        \n                        <sw-alert variant="info">\n                            <p>Please select all products that should be offered within the bundle. Depending on the plugin configuration, any duplicate parent product will be automatically removed from the bundle. For variant products, you can select either the parent or a specific variant. If you select the parent, the customer can select a variant.</p>\n                        </sw-alert>\n\n                        \n                        <div class="product-selection-area">\n                            \n                            <sw-entity-single-select\n                                    entity="product"\n                                    v-model:value="selectedProductToAdd"\n                                    label="Select product"\n                                    placeholder="Please select product..."\n                                    :criteria="productCriteria"\n                                    labelProperty="name"\n                                    valueProperty="id"\n                                    @update:value="onProductSelectedFromDropdown">\n                            </sw-entity-single-select>\n\n                            \n                            <div v-if="selectedProductsForAdd.length > 0" class="selected-products-preview">\n                                <h4>Selected Products ({{ selectedProductsForAdd.length }}):</h4>\n                                <div class="selected-products-list">\n                                    <div\n                                            v-for="product in selectedProductsForAdd"\n                                            :key="product.id"\n                                            class="selected-product-item">\n                                        <span>{{ product.name }}</span>\n                                        <sw-button\n                                                size="x-small"\n                                                variant="ghost"\n                                                @click="removeFromSelection(product)">\n                                            \xd7\n                                        </sw-button>\n                                    </div>\n                                </div>\n\n                                <div class="selection-actions">\n                                    <sw-button\n                                            variant="primary"\n                                            size="small"\n                                            :disabled="isProductsLoading"\n                                            @click="addSelectedProducts">\n                                        Add {{ selectedProductsForAdd.length }} Product(s) to Bundle\n                                    </sw-button>\n                                    <sw-button\n                                            variant="ghost"\n                                            size="small"\n                                            class="clear-selection-btn"\n                                            @click="clearSelection">\n                                        Clear Selection\n                                    </sw-button>\n                                </div>\n                            </div>\n                        </div>\n\n                        \n                        <div v-if="bundleProducts && bundleProducts.length > 0" class="bundle-products-list">\n                            <h4>Bundle Products ({{ bundleProducts.length }}):</h4>\n                            <sw-data-grid\n                                    :dataSource="bundleProducts"\n                                    :columns="productColumns"\n                                    :showSelection="false"\n                                    :showActions="true"\n                                    :allowInlineEdit="true"\n                                    :isLoading="isProductsLoading"\n                                    @inline-edit-save="onProductUpdate">\n\n                                <template #column-product="{ item }">\n                                    <div class="product-info">\n                                        <span>{{ item.product ? item.product.name : \'Unknown Product\' }}</span>\n                                    </div>\n                                </template>\n\n                                <template #column-productNumber="{ item }">\n                                    <span>{{ item.product ? item.product.productNumber : \'N/A\' }}</span>\n                                </template>\n\n                                <template #column-quantity="{ item, isInlineEdit }">\n                                    <sw-number-field\n                                            v-if="isInlineEdit"\n                                            v-model:value="item.quantity"\n                                            :min="1"\n                                            :step="1"\n                                            :digits="0">\n                                    </sw-number-field>\n                                    <span v-else>{{ item.quantity }}</span>\n                                </template>\n\n                                <template #actions="{ item }">\n                                    <sw-context-menu-item\n                                            icon="regular-times-s"\n                                            variant="danger"\n                                            @click="removeProduct(item)">\n                                        Remove\n                                    </sw-context-menu-item>\n                                </template>\n                            </sw-data-grid>\n                        </div>\n\n                        <sw-empty-state\n                                v-else-if="!isProductsLoading"\n                                title="No products added"\n                                icon="default-package-closed"\n                                description="Add products to this bundle using the selector above">\n                        </sw-empty-state>\n                    </div>\n\n                    <div v-else class="sw-card__content">\n                        <sw-alert variant="info">\n                            Please save the bundle first before adding products.\n                        </sw-alert>\n                    </div>\n                </sw-card>\n            </sw-card-view>\n        </template>\n    </sw-page>\n{% endblock %}',inject:["repositoryFactory","loginService"],mixins:[a.getByName("notification")],data(){return{bundle:{name:"",discount:0,discountType:"percentage",isSelectable:!1,active:!0,displayMode:"default",priority:0},bundleProducts:[],selectedProductToAdd:null,selectedProductsForAdd:[],isLoading:!1,isProductsLoading:!1,isSaveSuccessful:!1}},computed:{bundleId(){return this.$route?.params?.id||null},isCreateMode(){return!this.bundleId||"create"===this.bundleId},bundleRepository(){return this.repositoryFactory.create("digipercep_bundle")},bundleProductRepository(){return this.repositoryFactory.create("digipercep_bundle_product")},productRepository(){return this.repositoryFactory.create("product")},productCriteria(){let e=new l;e.addAssociation("cover"),e.addFilter(l.equals("active",!0)),e.addFilter(l.equals("parentId",null));let t=[...this.bundleProducts.map(e=>e.productId),...this.selectedProductsForAdd.map(e=>e.id)];return t.length>0&&e.addFilter(l.not("AND",[l.equalsAny("id",t)])),e.setLimit(25),e},discountTypeOptions(){return[{label:"Percentage",value:"percentage"},{label:"Absolute",value:"absolute"}]},displayModeOptions(){return[{label:"Default",value:"default"},{label:"Promotion Box",value:"promotion_box"}]},productColumns(){return[{property:"product",dataIndex:"product.name",label:"Product",primary:!0,allowResize:!0},{property:"productNumber",dataIndex:"product.productNumber",label:"Product Number",allowResize:!0,align:"center"},{property:"quantity",dataIndex:"quantity",label:"Quantity",allowResize:!0,inlineEdit:"number",align:"center"}]}},created(){this.loadBundle()},methods:{async loadBundle(){if(this.isCreateMode){this.bundle={name:"",discount:0,discountType:"percentage",isSelectable:!1,active:!0,displayMode:"default",priority:0},this.bundleProducts=[],this.isProductsLoading=!1;return}this.isLoading=!0;try{let e=await this.bundleRepository.get(this.bundleId,Shopware.Context.api);this.bundle={id:e.id,name:e.name||"",discount:e.discount||0,discountType:e.discountType||"percentage",isSelectable:!!e.isSelectable,active:!!e.active,displayMode:e.displayMode||"default",priority:e.priority||0},await this.loadBundleProducts()}catch(e){this.createNotificationError({message:`Failed to load bundle: ${e.message}`})}finally{this.isLoading=!1}},async loadBundleProducts(){if(!this.bundle.id){this.bundleProducts=[],this.isProductsLoading=!1;return}this.isProductsLoading=!0;try{let e=new l;e.addFilter(l.equals("bundleId",this.bundle.id)),e.addAssociation("product.cover"),e.addAssociation("product.prices"),e.addSorting(l.sort("position","ASC"));let t=await this.bundleProductRepository.search(e,Shopware.Context.api);this.bundleProducts=Array.from(t)}catch(e){this.createNotificationError({message:`Error loading products: ${e.message}`}),this.bundleProducts=[]}finally{this.isProductsLoading=!1}},async onProductSelectedFromDropdown(e){if(e)try{let t=await this.productRepository.get(e,Shopware.Context.api);if(this.bundleProducts.find(t=>t.productId===e)){this.createNotificationWarning({message:"This product is already in the bundle"}),this.selectedProductToAdd=null;return}if(this.selectedProductsForAdd.find(t=>t.id===e)){this.createNotificationWarning({message:"This product is already selected"}),this.selectedProductToAdd=null;return}this.selectedProductsForAdd.push(t),this.selectedProductToAdd=null,this.createNotificationInfo({message:`${t.name} added to selection`})}catch(e){this.createNotificationError({message:`Error loading product: ${e.message}`})}},removeFromSelection(e){let t=this.selectedProductsForAdd.findIndex(t=>t.id===e.id);t>-1&&(this.selectedProductsForAdd.splice(t,1),this.createNotificationInfo({message:`${e.name} removed from selection`}))},clearSelection(){this.selectedProductsForAdd=[],this.selectedProductToAdd=null,this.createNotificationInfo({message:"Selection cleared"})},async addSelectedProducts(){if(0===this.selectedProductsForAdd.length){this.createNotificationWarning({message:"No products selected"});return}if(!this.bundle.id){this.createNotificationError({message:"Bundle must be saved before adding products"});return}this.isProductsLoading=!0;try{let e=[],t=this.bundleProducts.length;for(let n=0;n<this.selectedProductsForAdd.length;n++){let i=this.selectedProductsForAdd[n],s=this.bundleProductRepository.create(Shopware.Context.api);s.bundleId=this.bundle.id,s.productId=i.id,s.quantity=1,s.position=t+n+1,e.push(s)}await this.bundleProductRepository.saveAll(e,Shopware.Context.api),this.createNotificationSuccess({message:`Successfully added ${e.length} product(s) to bundle`}),this.selectedProductsForAdd=[],this.selectedProductToAdd=null,await this.loadBundleProducts()}catch(e){this.createNotificationError({message:`Error adding products: ${e.message}`})}finally{this.isProductsLoading=!1}},async removeProduct(e){if(!e.id){this.createNotificationError({message:"Cannot remove product: Invalid product ID"});return}try{await this.bundleProductRepository.delete(e.id,Shopware.Context.api),this.createNotificationSuccess({message:"Product removed from bundle"}),await this.loadBundleProducts()}catch(e){this.createNotificationError({message:`Error removing product: ${e.message}`})}},async onProductUpdate(e){try{await this.bundleProductRepository.save(e,Shopware.Context.api),this.createNotificationSuccess({message:"Product updated successfully"})}catch(e){this.createNotificationError({message:`Error updating product: ${e.message}`}),await this.loadBundleProducts()}},async onSave(){if(!this.bundle.name||""===this.bundle.name.trim()){this.createNotificationError({message:"Bundle name is required"});return}this.isLoading=!0;try{let e={name:this.bundle.name.trim(),discount:parseFloat(this.bundle.discount)||0,discountType:this.bundle.discountType||"percentage",isSelectable:!!this.bundle.isSelectable,active:!!this.bundle.active,displayMode:this.bundle.displayMode||"default",priority:parseInt(this.bundle.priority)||0};if(this.isCreateMode){let t=this.bundleRepository.create(Shopware.Context.api);Object.assign(t,e),await this.bundleRepository.save(t,Shopware.Context.api),this.bundle.id=t.id,this.createNotificationSuccess({message:"Bundle created successfully"}),this.isSaveSuccessful=!0,this.$router.push({name:"digipercep.bundle.detail",params:{id:t.id}})}else{let t=await this.bundleRepository.get(this.bundle.id,Shopware.Context.api);Object.assign(t,e),await this.bundleRepository.save(t,Shopware.Context.api),this.createNotificationSuccess({message:"Bundle updated successfully"}),this.isSaveSuccessful=!0}}catch(e){this.createNotificationError({message:`Save failed: ${e.message}`})}finally{this.isLoading=!1}},saveFinish(){this.isSaveSuccessful=!1},onCancel(){this.$router.push({name:"digipercep.bundle.list"})}}});let{Component:d,Mixin:r}=Shopware;d.register("digipercep-bundle-create",{template:'{% block digipercep_bundle_create %}\n    <sw-page class="digipercep-bundle-create">\n        <template #smart-bar-header>\n            <h2>{{ $tc(\'digipercep-bundle.create.title\') }}</h2>\n        </template>\n\n        <template #smart-bar-actions>\n            <sw-button @click="onCancel">\n                {{ $tc(\'digipercep-bundle.create.buttonCancel\') }}\n            </sw-button>\n            <sw-button-process\n                    :is-loading="isLoading"\n                    :process-success="isSaveSuccessful"\n                    variant="primary"\n                    @process-finish="saveFinish"\n                    @click="onSave">\n                {{ $tc(\'digipercep-bundle.create.buttonSave\') }}\n            </sw-button-process>\n        </template>\n\n        <template #content>\n            <sw-card-view>\n                <sw-card :title="$tc(\'digipercep-bundle.create.cardTitle\')">\n                    <sw-container columns="repeat(auto-fit, minmax(250px, 1fr))" gap="0 30px">\n                        <sw-text-field\n                                v-model:value="formData.name"\n                                :label="$tc(\'digipercep-bundle.create.labelName\')"\n                                :placeholder="$tc(\'digipercep-bundle.create.placeholderName\')"\n                                required>\n                        </sw-text-field>\n\n                        <sw-number-field\n                                v-model:value="formData.discount"\n                                :label="$tc(\'digipercep-bundle.create.labelDiscount\')"\n                                :min="0"\n                                :max="formData.discountType === \'percentage\' ? 100 : null"\n                                :suffix="formData.discountType === \'percentage\' ? \'%\' : \'\'"\n                                :step="0.01"\n                                :digits="2"\n                                required>\n                        </sw-number-field>\n\n                        <sw-single-select\n                                v-model:value="formData.discountType"\n                                :label="$tc(\'digipercep-bundle.create.labelDiscountType\')"\n                                :options="discountTypeOptions">\n                        </sw-single-select>\n\n                        <sw-single-select\n                                v-model:value="formData.displayMode"\n                                :label="$tc(\'digipercep-bundle.create.labelDisplayMode\')"\n                                :options="displayModeOptions">\n                        </sw-single-select>\n\n                        <sw-number-field\n                                v-model:value="formData.priority"\n                                :label="$tc(\'digipercep-bundle.create.labelPriority\')"\n                                :min="0"\n                                :step="1"\n                                :digits="0">\n                        </sw-number-field>\n                    </sw-container>\n\n                    <sw-container columns="repeat(auto-fit, minmax(250px, 1fr))" gap="0 30px">\n                        <sw-switch-field\n                                v-model="formData.active"\n                                :label="$tc(\'digipercep-bundle.create.labelActive\')">\n                        </sw-switch-field>\n\n                        <sw-switch-field\n                                v-model="formData.isSelectable"\n                                :label="$tc(\'digipercep-bundle.create.labelSelectable\')"\n                                :helpText="$tc(\'digipercep-bundle.create.helpTextSelectable\')">\n                        </sw-switch-field>\n                    </sw-container>\n                </sw-card>\n            </sw-card-view>\n        </template>\n    </sw-page>\n{% endblock %}',inject:["repositoryFactory","loginService"],mixins:[r.getByName("notification")],data(){return{formData:{name:"",active:!0,discount:0,discountType:"percentage",isSelectable:!1,displayMode:"default",priority:0},isLoading:!1,isSaveSuccessful:!1}},computed:{discountTypeOptions(){return[{label:this.$tc("digipercep-bundle.create.optionPercentage"),value:"percentage"},{label:this.$tc("digipercep-bundle.create.optionAbsolute"),value:"absolute"}]},displayModeOptions(){return[{label:this.$tc("digipercep-bundle.create.optionDisplayDefault"),value:"default"},{label:this.$tc("digipercep-bundle.create.optionDisplayPromotionBox"),value:"promotion_box"}]}},metaInfo(){return{title:this.$createTitle(this.$tc("digipercep-bundle.create.title"))}},methods:{async onSave(){if(this.validateForm()){this.isLoading=!0;try{let e=await fetch("/api/digipercep-bundle",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.loginService.getToken()}`},body:JSON.stringify(this.prepareFormData())}),t=await e.json();if(e.ok)this.createNotificationSuccess({message:this.$tc("digipercep-bundle.create.messageSaveSuccess")}),this.isSaveSuccessful=!0;else throw Error(t.errors?.[0]?.detail||"Unknown error")}catch(e){this.createNotificationError({message:this.$tc("digipercep-bundle.create.messageSaveError",0,{error:e.message})})}finally{this.isLoading=!1}}},validateForm(){return!!this.formData.name?.trim()||(this.createNotificationError({message:this.$tc("digipercep-bundle.create.errorNameRequired")}),!1)},prepareFormData(){return{name:this.formData.name.trim(),discount:parseFloat(this.formData.discount),discountType:this.formData.discountType,isSelectable:this.formData.isSelectable,active:this.formData.active,displayMode:this.formData.displayMode,priority:parseInt(this.formData.priority)||0}},saveFinish(){this.isSaveSuccessful=!1,this.$router.push({name:"digipercep.bundle.list"})},onCancel(){this.$router.push({name:"digipercep.bundle.list"})}}});let{Component:u}=Shopware;u.register("digipercep-bundle-detail-base",{template:'{% block digipercep_bundle_detail_base %}\n    <sw-card :title="$tc(\'digipercep-bundle.detail.base.cardTitle\')" :isLoading="isLoading">\n        <sw-container columns="repeat(auto-fit, minmax(250px, 1fr))" gap="0 30px">\n\n            \n            <sw-text-field\n                    v-model:value="formData.name"\n                    :label="$tc(\'digipercep-bundle.detail.base.labelName\')"\n                    :placeholder="$tc(\'digipercep-bundle.detail.base.placeholderName\')"\n                    required>\n            </sw-text-field>\n\n            \n            <sw-number-field\n                    v-model:value="formData.discount"\n                    :label="$tc(\'digipercep-bundle.detail.base.labelDiscount\')"\n                    :min="0"\n                    :max="formData.discountType === \'percentage\' ? 100 : null"\n                    :suffix="formData.discountType === \'percentage\' ? \'%\' : \'\'"\n                    :step="0.01"\n                    :digits="2"\n                    required>\n            </sw-number-field>\n\n            \n            <sw-single-select\n                    v-model:value="formData.discountType"\n                    :label="$tc(\'digipercep-bundle.detail.base.labelDiscountType\')"\n                    :options="discountTypeOptions">\n            </sw-single-select>\n\n            \n            <sw-single-select\n                    v-model:value="formData.displayMode"\n                    :label="$tc(\'digipercep-bundle.detail.base.labelDisplayMode\')"\n                    :options="displayModeOptions">\n            </sw-single-select>\n\n            \n            <sw-number-field\n                    v-model:value="formData.priority"\n                    :label="$tc(\'digipercep-bundle.detail.base.labelPriority\')"\n                    :min="0"\n                    :step="1"\n                    :digits="0">\n            </sw-number-field>\n        </sw-container>\n\n        <sw-container columns="repeat(auto-fit, minmax(250px, 1fr))" gap="0 30px">\n\n            \n            <sw-switch-field\n                    v-model="formData.active"\n                    :label="$tc(\'digipercep-bundle.detail.base.labelActive\')">\n            </sw-switch-field>\n\n            \n            <sw-switch-field\n                    v-model="formData.isSelectable"\n                    :label="$tc(\'digipercep-bundle.detail.base.labelSelectable\')"\n                    :helpText="$tc(\'digipercep-bundle.detail.base.helpTextSelectable\')">\n            </sw-switch-field>\n        </sw-container>\n    </sw-card>\n{% endblock %}',props:{bundle:{type:Object,required:!0},formData:{type:Object,required:!0}},computed:{discountTypeOptions(){return[{label:this.$tc("digipercep-bundle.detail.base.optionPercentage"),value:"percentage"},{label:this.$tc("digipercep-bundle.detail.base.optionAbsolute"),value:"absolute"}]},displayModeOptions(){return[{label:this.$tc("digipercep-bundle.detail.base.optionDisplayDefault"),value:"default"},{label:this.$tc("digipercep-bundle.detail.base.optionDisplayPromotionBox"),value:"promotion_box"}]}}});let{Component:c,Mixin:p}=Shopware;c.register("digipercep-bundle-detail-products",{template:'{% block digipercep_bundle_detail_products %}\n    <sw-card title="Bundle Products" :isLoading="isLoading">\n\n        \n        <template #toolbar>\n            <sw-container columns="1fr auto" gap="16px">\n                \n                <div class="product-search-container">\n                    <sw-simple-search-field\n                            v-model="searchTerm"\n                            :placeholder="\'Search products...\'"\n                            @search-term-change="onSearchProducts">\n                    </sw-simple-search-field>\n\n                    \n                    <div v-if="searchResults.length > 0" class="search-results-dropdown">\n                        <div\n                                v-for="product in searchResults"\n                                :key="product.id"\n                                class="search-result-item"\n                                @click="selectProduct(product)">\n                            <div class="product-info">\n                                <img v-if="product.cover?.media?.url"\n                                     :src="product.cover.media.url"\n                                     class="product-image"\n                                     :alt="product.name">\n                                <div class="product-details">\n                                    <strong>{{ product.name }}</strong>\n                                    <small>{{ product.productNumber }}</small>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                \n                <div v-if="selectedProductsForAdd.length > 0" class="selected-products">\n                    <span class="selected-count">{{ selectedProductsForAdd.length }} selected</span>\n                    <sw-button variant="primary" @click="addSelectedProducts">\n                        Add Products\n                    </sw-button>\n                    <sw-button @click="clearSelection">\n                        Clear\n                    </sw-button>\n                </div>\n            </sw-container>\n        </template>\n\n        \n        <template #grid>\n            <sw-data-grid\n                    v-if="bundleProducts.length > 0"\n                    :dataSource="bundleProducts"\n                    :columns="productColumns"\n                    :showSelection="false"\n                    :showActions="true"\n                    :allowInlineEdit="true"\n                    :isLoading="isLoading"\n                    identifier="bundle-products-grid"\n                    @inline-edit-save="onInlineEditSave">\n\n                \n                <template #column-product="{ item }">\n                    <div class="bundle-product-item">\n                        <img v-if="item.product?.cover?.media?.url"\n                             :src="item.product.cover.media.url"\n                             class="bundle-product-image"\n                             :alt="item.product.name">\n                        <div class="bundle-product-info">\n                            <span class="bundle-product-name">\n                                {{ item.product?.name || \'Unknown Product\' }}\n                            </span>\n                            <span class="bundle-product-number">\n                                {{ item.product?.productNumber || item.productId }}\n                            </span>\n                        </div>\n                    </div>\n                </template>\n\n                \n                <template #column-quantity="{ item, isInlineEdit }">\n                    <sw-number-field\n                            v-if="isInlineEdit"\n                            v-model:value="item.quantity"\n                            :min="1"\n                            :max="999"\n                            :step="1"\n                            :digits="0">\n                    </sw-number-field>\n                    <span v-else>{{ item.quantity }}</span>\n                </template>\n\n                \n                <template #column-isOptional="{ item, isInlineEdit }">\n                    <sw-switch-field\n                            v-if="isInlineEdit"\n                            v-model="item.isOptional">\n                    </sw-switch-field>\n                    <sw-icon\n                            v-else\n                            :name="item.isOptional ? \'regular-checkmark-xs\' : \'regular-times-s\'"\n                            size="small"\n                            :class="item.isOptional ? \'is-optional-active\' : \'is-optional-inactive\'">\n                    </sw-icon>\n                </template>\n\n                \n                <template #actions="{ item }">\n                    <sw-context-menu-item\n                            icon="regular-times-s"\n                            variant="danger"\n                            @click="removeProduct(item)">\n                        Remove\n                    </sw-context-menu-item>\n                </template>\n            </sw-data-grid>\n\n            \n            <sw-empty-state\n                    v-else\n                    title="No products assigned"\n                    icon="regular-products">\n                <template #actions>\n                    <p>Search for products above to add them to this bundle</p>\n                </template>\n            </sw-empty-state>\n        </template>\n\n        \n        <template #footer>\n            <div class="bundle-products-summary">\n                <span class="bundle-products-count">\n                    Total: {{ bundleProducts.length }} products\n                </span>\n            </div>\n        </template>\n    </sw-card>\n{% endblock %}',inject:["loginService"],mixins:[p.getByName("notification")],props:{bundle:{type:Object,required:!0}},data(){return{bundleProducts:[],searchTerm:"",searchResults:[],selectedProductsForAdd:[],isLoading:!1,searchTimeout:null}},computed:{productColumns(){return[{property:"product",dataIndex:"product.name",label:"Product",primary:!0,allowResize:!0,sortable:!1},{property:"quantity",dataIndex:"quantity",label:"Quantity",allowResize:!0,inlineEdit:"number",align:"center"},{property:"isOptional",dataIndex:"isOptional",label:"Optional",allowResize:!0,inlineEdit:"boolean",align:"center"}]}},watch:{bundle:{handler(){this.loadBundleProducts()},immediate:!0}},methods:{async loadBundleProducts(){if(!this.bundle?.id){this.bundleProducts=[];return}this.isLoading=!0;try{let e=await fetch(`/api/digipercep-bundle/${this.bundle.id}/products`,{method:"GET",headers:{Authorization:`Bearer ${this.loginService.getToken()}`,"Content-Type":"application/json"}});if(e.ok){let t=await e.json();this.bundleProducts=t.data||[]}else throw Error("Failed to load bundle products")}catch(e){console.error("Error loading bundle products:",e),this.createNotificationError({message:`Error loading products: ${e.message}`}),this.bundleProducts=[]}finally{this.isLoading=!1}},onSearchProducts(e){this.searchTerm=e,this.searchTimeout&&clearTimeout(this.searchTimeout),this.searchTimeout=setTimeout(()=>{e&&e.length>=2?this.searchProducts(e):this.searchResults=[]},300)},async searchProducts(e){try{let t=await fetch("/api/search/product",{method:"POST",headers:{Authorization:`Bearer ${this.loginService.getToken()}`,"Content-Type":"application/json"},body:JSON.stringify({limit:10,page:1,term:e,associations:{cover:{associations:{media:{}}}},filter:[{type:"equals",field:"active",value:!0},{type:"equals",field:"parentId",value:null}]})});if(t.ok){let e=await t.json();this.searchResults=e.data||[]}else console.error("Product search failed"),this.searchResults=[]}catch(e){console.error("Error searching products:",e),this.searchResults=[]}},selectProduct(e){if(this.bundleProducts.find(t=>t.productId===e.id)){this.createNotificationWarning({message:"This product is already in the bundle"});return}if(this.selectedProductsForAdd.find(t=>t.id===e.id)){this.createNotificationWarning({message:"This product is already selected"});return}this.selectedProductsForAdd.push(e),this.searchTerm="",this.searchResults=[],this.createNotificationInfo({message:`${e.name} added to selection`})},clearSelection(){this.selectedProductsForAdd=[],this.searchTerm="",this.searchResults=[]},async addSelectedProducts(){if(0!==this.selectedProductsForAdd.length){if(!this.bundle.id){this.createNotificationError({message:"Please save the bundle first before adding products"});return}this.isLoading=!0;try{let e=this.selectedProductsForAdd.map(e=>({productId:e.id,quantity:1,isOptional:!1})),t=await fetch(`/api/digipercep-bundle/${this.bundle.id}/products/bulk`,{method:"POST",headers:{Authorization:`Bearer ${this.loginService.getToken()}`,"Content-Type":"application/json"},body:JSON.stringify({products:e})});if(t.ok){let e=await t.json();this.createNotificationSuccess({message:`Added ${e.data.created} products to bundle`}),this.clearSelection(),await this.loadBundleProducts()}else{let e=await t.json();throw Error(e.errors?.[0]?.detail||"Failed to add products")}}catch(e){console.error("Error adding products:",e),this.createNotificationError({message:`Error adding products: ${e.message}`})}finally{this.isLoading=!1}}},async removeProduct(e){if(!e.id){this.createNotificationError({message:"Invalid product data"});return}try{let t=await fetch(`/api/digipercep-bundle/products/${e.id}`,{method:"DELETE",headers:{Authorization:`Bearer ${this.loginService.getToken()}`,"Content-Type":"application/json"}});if(t.ok)this.createNotificationSuccess({message:"Product removed from bundle"}),await this.loadBundleProducts();else{let e=await t.json();throw Error(e.errors?.[0]?.detail||"Failed to remove product")}}catch(e){console.error("Error removing product:",e),this.createNotificationError({message:`Error removing product: ${e.message}`})}},async onInlineEditSave(e){if(!e.id){this.createNotificationError({message:"Invalid product data"});return}try{let t=await fetch(`/api/digipercep-bundle/products/${e.id}`,{method:"PATCH",headers:{Authorization:`Bearer ${this.loginService.getToken()}`,"Content-Type":"application/json"},body:JSON.stringify({quantity:parseInt(e.quantity)||1,isOptional:!!e.isOptional})});if(t.ok)this.createNotificationSuccess({message:"Product updated successfully"});else{let e=await t.json();throw Error(e.errors?.[0]?.detail||"Failed to update product")}}catch(e){console.error("Error updating product:",e),this.createNotificationError({message:`Error updating product: ${e.message}`}),await this.loadBundleProducts()}}}}),n(658);let{Component:m,Mixin:b}=Shopware,{Criteria:h}=Shopware.Data;m.register("digipercep-product-bundle-assignment",{template:'{% block digipercep_product_bundle_assignment %}\n    <sw-card title="Bundle Assignments" :is-loading="isLoading">\n        <template #toolbar>\n            <sw-container columns="1fr auto" gap="16px">\n                <div class="bundle-assignment-info">\n                    <sw-alert variant="info">\n                        <p>Assign up to 3 bundles to this product. Each bundle slot can contain one bundle.</p>\n                        <p v-if="hasCustomFieldData" class="custom-field-notice">\n                            <sw-icon name="regular-info-circle" size="12px"></sw-icon>\n                            This product has custom field bundle data available.\n                        </p>\n                    </sw-alert>\n                </div>\n                <div class="bundle-assignment-actions">\n                    \n                    <sw-field\n                            type="switch"\n                            v-model="useCustomFields"\n                            :label="\'Use Custom Fields\'"\n                            size="small"\n                            @update:value="onToggleStorageMode">\n                    </sw-field>\n\n                    \n                    <sw-button-group v-if="showMigrationOptions">\n                        <sw-button\n                                size="small"\n                                @click="onMigrateBundles(\'database_to_custom_field\')">\n                            DB → CF\n                        </sw-button>\n                        <sw-button\n                                size="small"\n                                @click="onMigrateBundles(\'custom_field_to_database\')">\n                            CF → DB\n                        </sw-button>\n                    </sw-button-group>\n\n                    <sw-button\n                            variant="primary"\n                            size="small"\n                            :disabled="isLoading"\n                            @click="onSaveAssignments">\n                        Save Assignments\n                    </sw-button>\n                    <sw-button\n                            size="small"\n                            :disabled="isLoading"\n                            @click="onRefresh">\n                        Refresh\n                    </sw-button>\n                    <sw-button\n                            size="small"\n                            variant="ghost"\n                            @click="showMigrationOptions = !showMigrationOptions">\n                        <sw-icon name="regular-cog" size="12px"></sw-icon>\n                    </sw-button>\n                </div>\n            </sw-container>\n        </template>\n\n        \n        <div class="storage-mode-indicator">\n            <sw-alert :variant="useCustomFields ? \'warning\' : \'success\'" class="storage-alert">\n                <template #icon>\n                    <sw-icon :name="useCustomFields ? \'regular-database\' : \'regular-table\'" size="16px"></sw-icon>\n                </template>\n                <p>\n                    <strong>Storage Mode:</strong>\n                    {{ useCustomFields ? \'Custom Fields (digipercep_bundle_product)\' : \'Database Tables\' }}\n                </p>\n                <p class="storage-description">\n                    {{ useCustomFields ? \'Data stored in product custom field as JSON\' : \'Data stored in dedicated database tables\' }}\n                </p>\n            </sw-alert>\n        </div>\n\n        <div class="bundle-assignment-grid">\n            \n            <sw-card title="Bundle 1" class="bundle-slot-card" :class="{ \'has-bundle\': bundleSlots.bundle_1.bundleId }">\n                <div class="bundle-slot-content">\n                    <sw-entity-single-select\n                            entity="digipercep_bundle"\n                            v-model:value="bundleSlots.bundle_1.bundleId"\n                            :label="\'Select Bundle\'"\n                            :placeholder="\'Choose a bundle...\'"\n                            :criteria="bundleCriteria"\n                            labelProperty="name"\n                            valueProperty="id"\n                            :disabled="isLoading"\n                            @update:value="onBundleChanged(\'bundle_1\', $event)">\n\n                        <template #result-item="{ item, index }">\n                            <li class="sw-select-result__result-item" :class="{ \'is--active\': index === 0 }">\n                                <div class="bundle-select-item">\n                                    <strong>{{ item.name }}</strong>\n                                    <span class="bundle-discount">\n                                        {{ item.discount }}{{ item.discountType === \'percentage\' ? \'%\' : \'\' }} discount\n                                    </span>\n                                </div>\n                            </li>\n                        </template>\n                    </sw-entity-single-select>\n\n                    <sw-number-field\n                            v-if="bundleSlots.bundle_1.bundleId"\n                            v-model:value="bundleSlots.bundle_1.priority"\n                            :label="\'Priority\'"\n                            :placeholder="\'0\'"\n                            :min="0"\n                            :step="1"\n                            :digits="0"\n                            :disabled="isLoading">\n                    </sw-number-field>\n\n                    <div v-if="bundleSlots.bundle_1.bundle" class="assigned-bundle-info">\n                        <div class="bundle-info-header">\n                            <span class="bundle-name">{{ bundleSlots.bundle_1.bundle.name }}</span>\n                            <sw-button\n                                    variant="ghost"\n                                    size="x-small"\n                                    @click="clearBundleSlot(\'bundle_1\')">\n                                <sw-icon name="regular-times-s" size="12px"></sw-icon>\n                            </sw-button>\n                        </div>\n                        <div class="bundle-info-details">\n                            <span class="bundle-discount-info">\n                                Discount: {{ bundleSlots.bundle_1.bundle.discount }}{{ bundleSlots.bundle_1.bundle.discountType === \'percentage\' ? \'%\' : \'\' }}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </sw-card>\n\n            \n            <sw-card title="Bundle 2" class="bundle-slot-card" :class="{ \'has-bundle\': bundleSlots.bundle_2.bundleId }">\n                <div class="bundle-slot-content">\n                    <sw-entity-single-select\n                            entity="digipercep_bundle"\n                            v-model:value="bundleSlots.bundle_2.bundleId"\n                            :label="\'Select Bundle\'"\n                            :placeholder="\'Choose a bundle...\'"\n                            :criteria="bundleCriteria"\n                            labelProperty="name"\n                            valueProperty="id"\n                            :disabled="isLoading"\n                            @update:value="onBundleChanged(\'bundle_2\', $event)">\n\n                        <template #result-item="{ item, index }">\n                            <li class="sw-select-result__result-item" :class="{ \'is--active\': index === 0 }">\n                                <div class="bundle-select-item">\n                                    <strong>{{ item.name }}</strong>\n                                    <span class="bundle-discount">\n                                        {{ item.discount }}{{ item.discountType === \'percentage\' ? \'%\' : \'\' }} discount\n                                    </span>\n                                </div>\n                            </li>\n                        </template>\n                    </sw-entity-single-select>\n\n                    <sw-number-field\n                            v-if="bundleSlots.bundle_2.bundleId"\n                            v-model:value="bundleSlots.bundle_2.priority"\n                            :label="\'Priority\'"\n                            :placeholder="\'0\'"\n                            :min="0"\n                            :step="1"\n                            :digits="0"\n                            :disabled="isLoading">\n                    </sw-number-field>\n\n                    <div v-if="bundleSlots.bundle_2.bundle" class="assigned-bundle-info">\n                        <div class="bundle-info-header">\n                            <span class="bundle-name">{{ bundleSlots.bundle_2.bundle.name }}</span>\n                            <sw-button\n                                    variant="ghost"\n                                    size="x-small"\n                                    @click="clearBundleSlot(\'bundle_2\')">\n                                <sw-icon name="regular-times-s" size="12px"></sw-icon>\n                            </sw-button>\n                        </div>\n                        <div class="bundle-info-details">\n                            <span class="bundle-discount-info">\n                                Discount: {{ bundleSlots.bundle_2.bundle.discount }}{{ bundleSlots.bundle_2.bundle.discountType === \'percentage\' ? \'%\' : \'\' }}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </sw-card>\n\n            \n            <sw-card title="Bundle 3" class="bundle-slot-card" :class="{ \'has-bundle\': bundleSlots.bundle_3.bundleId }">\n                <div class="bundle-slot-content">\n                    <sw-entity-single-select\n                            entity="digipercep_bundle"\n                            v-model:value="bundleSlots.bundle_3.bundleId"\n                            :label="\'Select Bundle\'"\n                            :placeholder="\'Choose a bundle...\'"\n                            :criteria="bundleCriteria"\n                            labelProperty="name"\n                            valueProperty="id"\n                            :disabled="isLoading"\n                            @update:value="onBundleChanged(\'bundle_3\', $event)">\n\n                        <template #result-item="{ item, index }">\n                            <li class="sw-select-result__result-item" :class="{ \'is--active\': index === 0 }">\n                                <div class="bundle-select-item">\n                                    <strong>{{ item.name }}</strong>\n                                    <span class="bundle-discount">\n                                        {{ item.discount }}{{ item.discountType === \'percentage\' ? \'%\' : \'\' }} discount\n                                    </span>\n                                </div>\n                            </li>\n                        </template>\n                    </sw-entity-single-select>\n\n                    <sw-number-field\n                            v-if="bundleSlots.bundle_3.bundleId"\n                            v-model:value="bundleSlots.bundle_3.priority"\n                            :label="\'Priority\'"\n                            :placeholder="\'0\'"\n                            :min="0"\n                            :step="1"\n                            :digits="0"\n                            :disabled="isLoading">\n                    </sw-number-field>\n\n                    <div v-if="bundleSlots.bundle_3.bundle" class="assigned-bundle-info">\n                        <div class="bundle-info-header">\n                            <span class="bundle-name">{{ bundleSlots.bundle_3.bundle.name }}</span>\n                            <sw-button\n                                    variant="ghost"\n                                    size="x-small"\n                                    @click="clearBundleSlot(\'bundle_3\')">\n                                <sw-icon name="regular-times-s" size="12px"></sw-icon>\n                            </sw-button>\n                        </div>\n                        <div class="bundle-info-details">\n                            <span class="bundle-discount-info">\n                                Discount: {{ bundleSlots.bundle_3.bundle.discount }}{{ bundleSlots.bundle_3.bundle.discountType === \'percentage\' ? \'%\' : \'\' }}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </sw-card>\n        </div>\n\n        \n        <div v-if="hasAssignedBundles" class="bundle-assignment-summary">\n            <h4>Assigned Bundles Summary</h4>\n            <div class="summary-list">\n                <div\n                        v-for="(slot, slotName) in bundleSlots"\n                        :key="slotName"\n                        v-if="slot.bundle"\n                        class="summary-item">\n                    <span class="slot-label">{{ formatSlotLabel(slotName) }}:</span>\n                    <span class="bundle-name">{{ slot.bundle.name }}</span>\n                    <span class="bundle-discount">({{ slot.bundle.discount }}{{ slot.bundle.discountType === \'percentage\' ? \'%\' : \'\' }} discount)</span>\n                    <span v-if="slot.priority" class="bundle-priority">Priority: {{ slot.priority }}</span>\n                </div>\n            </div>\n        </div>\n\n        \n        <div v-if="showMigrationOptions" class="technical-info">\n            <sw-card title="Technical Information" variant="ghost">\n                <div class="tech-info-grid">\n                    <div class="tech-info-item">\n                        <strong>Custom Field Name:</strong> digipercep_bundle_product\n                    </div>\n                    <div class="tech-info-item">\n                        <strong>Storage Type:</strong> {{ useCustomFields ? \'JSON in custom_field table\' : \'Normalized database tables\' }}\n                    </div>\n                    <div class="tech-info-item">\n                        <strong>Has Custom Field Data:</strong> {{ hasCustomFieldData ? \'Yes\' : \'No\' }}\n                    </div>\n                </div>\n            </sw-card>\n        </div>\n    </sw-card>\n{% endblock %}',inject:["repositoryFactory","loginService"],mixins:[b.getByName("notification")],props:{product:{type:Object,required:!0}},data(){return{bundleSlots:{bundle_1:{bundleId:null,priority:0,bundle:null},bundle_2:{bundleId:null,priority:0,bundle:null},bundle_3:{bundleId:null,priority:0,bundle:null}},isLoading:!1,originalData:null,useCustomFields:!1,showMigrationOptions:!1}},computed:{productId(){return this.product?.id||null},bundleRepository(){return this.repositoryFactory.create("digipercep_bundle")},productRepository(){return this.repositoryFactory.create("product")},bundleCriteria(){let e=new h;return e.addFilter(h.equals("active",!0)),e.addSorting(h.sort("name","ASC")),e.setLimit(25),e},hasAssignedBundles(){return Object.values(this.bundleSlots).some(e=>e.bundleId)},hasCustomFieldData(){return this.product?.customFields?.digipercep_bundle_product!==null&&this.product?.customFields?.digipercep_bundle_product!==void 0}},watch:{product:{handler(){this.loadProductBundles()},immediate:!0}},methods:{async loadProductBundles(){if(!this.productId){this.resetBundleSlots();return}this.isLoading=!0;try{let e=`/api/digipercep-product/${this.productId}/bundles`;this.useCustomFields&&(e=`/api/digipercep-product/${this.productId}/bundles/custom-field`);let t=await fetch(e,{method:"GET",headers:{Authorization:`Bearer ${this.loginService.getToken()}`,"Content-Type":"application/json"}});if(t.ok){let e=await t.json();this.useCustomFields?this.setupCustomFieldBundleSlots(e.data||{}):this.setupBundleSlots(e.bundleSlots||{}),this.originalData=JSON.parse(JSON.stringify(this.bundleSlots))}else throw Error("Failed to load product bundles")}catch(e){console.error("Error loading product bundles:",e),this.createNotificationError({message:`Error loading bundle assignments: ${e.message}`}),this.resetBundleSlots()}finally{this.isLoading=!1}},setupBundleSlots(e){this.resetBundleSlots(),Object.keys(this.bundleSlots).forEach(t=>{let n=e[t];n&&n.bundleId&&(this.bundleSlots[t]={bundleId:n.bundleId,priority:n.priority||0,bundle:n.bundle||null})})},setupCustomFieldBundleSlots(e){this.resetBundleSlots(),Object.keys(this.bundleSlots).forEach(async t=>{let n=e[t];if(n&&n.bundleId)try{let e=await this.bundleRepository.get(n.bundleId,Shopware.Context.api);this.bundleSlots[t]={bundleId:n.bundleId,priority:n.priority||0,bundle:{id:e.id,name:e.name,discount:e.discount,discountType:e.discountType,active:e.active}}}catch(e){console.error("Error loading bundle for custom field:",e)}})},resetBundleSlots(){this.bundleSlots={bundle_1:{bundleId:null,priority:0,bundle:null},bundle_2:{bundleId:null,priority:0,bundle:null},bundle_3:{bundleId:null,priority:0,bundle:null}}},async onBundleChanged(e,t){if(!t){this.clearBundleSlot(e);return}try{let n=await this.bundleRepository.get(t,Shopware.Context.api);this.bundleSlots[e].bundleId=t,this.bundleSlots[e].bundle={id:n.id,name:n.name,discount:n.discount,discountType:n.discountType,active:n.active},this.createNotificationInfo({message:`${n.name} selected for ${this.formatSlotLabel(e)}`})}catch(t){console.error("Error loading bundle details:",t),this.createNotificationError({message:`Error loading bundle details: ${t.message}`}),this.clearBundleSlot(e)}},clearBundleSlot(e){this.bundleSlots[e]={bundleId:null,priority:0,bundle:null},this.createNotificationInfo({message:`${this.formatSlotLabel(e)} cleared`})},async onSaveAssignments(){if(!this.productId){this.createNotificationError({message:"Product ID is required to save assignments"});return}this.isLoading=!0;try{let e=`/api/digipercep-product/${this.productId}/bundles/bulk`;this.useCustomFields&&(e=`/api/digipercep-product/${this.productId}/bundles/custom-field`);let t=await fetch(e,{method:"POST",headers:{Authorization:`Bearer ${this.loginService.getToken()}`,"Content-Type":"application/json"},body:JSON.stringify({bundleSlots:this.prepareBundleSlotsForSave()})});if(t.ok){let e=await t.json();this.createNotificationSuccess({message:e.message||"Bundle assignments saved successfully"}),this.originalData=JSON.parse(JSON.stringify(this.bundleSlots)),await this.loadProductBundles()}else{let e=await t.json();throw Error(e.errors?.[0]?.detail||"Failed to save assignments")}}catch(e){console.error("Error saving bundle assignments:",e),this.createNotificationError({message:`Error saving assignments: ${e.message}`})}finally{this.isLoading=!1}},async onMigrateBundles(e){if(!this.productId){this.createNotificationError({message:"Product ID is required for migration"});return}this.isLoading=!0;try{let t=await fetch(`/api/digipercep-product/${this.productId}/bundles/migrate`,{method:"POST",headers:{Authorization:`Bearer ${this.loginService.getToken()}`,"Content-Type":"application/json"},body:JSON.stringify({direction:e})});if(t.ok){let e=await t.json();this.createNotificationSuccess({message:e.message||"Bundle assignments migrated successfully"}),await this.loadProductBundles()}else{let e=await t.json();throw Error(e.errors?.[0]?.detail||"Failed to migrate assignments")}}catch(e){console.error("Error migrating bundle assignments:",e),this.createNotificationError({message:`Error migrating assignments: ${e.message}`})}finally{this.isLoading=!1}},prepareBundleSlotsForSave(){let e={};return Object.keys(this.bundleSlots).forEach(t=>{let n=this.bundleSlots[t];n.bundleId?e[t]={bundleId:n.bundleId,priority:n.priority||0}:e[t]=null}),e},onRefresh(){this.loadProductBundles()},onToggleStorageMode(){this.useCustomFields=!this.useCustomFields,this.loadProductBundles()},formatSlotLabel(e){return({bundle_1:"Bundle 1",bundle_2:"Bundle 2",bundle_3:"Bundle 3"})[e]||e},hasUnsavedChanges(){return!!this.originalData&&JSON.stringify(this.bundleSlots)!==JSON.stringify(this.originalData)}}});var g=JSON.parse('{"digipercep-bundle":{"general":{"mainMenuItemGeneral":"Bundles"},"create":{"title":"Bundle erstellen","cardTitle":"Bundle Informationen","buttonSave":"Bundle speichern","buttonCancel":"Abbrechen","labelName":"Bundle Name","placeholderName":"Bundle Name eingeben","labelDiscount":"Rabatt","labelDiscountType":"Rabatt-Art","labelDisplayMode":"Anzeige-Modus","labelPriority":"Priorit\xe4t","labelActive":"Aktiv","labelSelectable":"Produktauswahl erm\xf6glichen","helpTextSelectable":"Kunden k\xf6nnen optionale Produkte in diesem Bundle ausw\xe4hlen","optionPercentage":"Prozentual","optionAbsolute":"Fester Betrag","optionDisplayDefault":"Standard","optionDisplayPromotionBox":"Promotion Box","errorNameRequired":"Bundle Name ist erforderlich","messageSaveSuccess":"Bundle erfolgreich gespeichert!","messageSaveError":"Fehler beim Speichern des Bundles: {error}"},"list":{"title":"Bundles","buttonAddBundle":"Bundle hinzuf\xfcgen","columnName":"Name","columnDiscount":"Rabatt","columnDiscountType":"Typ","columnSelectable":"W\xe4hlbar","columnActive":"Aktiv","emptyTitle":"Noch keine Bundles","emptySubline":"Erstelle dein erstes Bundle","editAction":"Bundle bearbeiten","deleteAction":"Bundle l\xf6schen"},"detail":{"buttonSave":"Speichern","buttonCancel":"Abbrechen","tabGeneral":"Allgemein","tabProducts":"Produkte","messageSaveSuccess":"Bundle erfolgreich gespeichert","messageSaveError":"Fehler beim Speichern des Bundles","base":{"cardTitle":"Bundle Informationen","labelName":"Name","placeholderName":"Bundle Name eingeben...","labelActive":"Aktiv","labelDiscount":"Rabatt","labelDiscountType":"Rabatt Typ","labelSelectable":"Kunde kann Produkte ausw\xe4hlen","helpTextSelectable":"Erm\xf6gliche Kunden, Produkte aus diesem Bundle auszuw\xe4hlen","labelPriority":"Priorit\xe4t","labelDisplayMode":"Anzeigemodus","optionPercentage":"Prozentual","optionAbsolute":"Absolut","optionDisplayDefault":"Standard","optionDisplayPromotionBox":"Promotion Box"},"products":{"cardTitle":"Bundle Produkte","selectProducts":"Produkte ausw\xe4hlen","selectProductsPlaceholder":"Produkte suchen und zum Bundle hinzuf\xfcgen","addProducts":"Ausgew\xe4hlte Produkte hinzuf\xfcgen","columnProduct":"Produkt","columnQuantity":"Menge","columnOptional":"Optional","emptyTitle":"Keine Produkte zugewiesen","emptySubline":"F\xfcgen Sie Produkte hinzu, um Ihr Bundle zu erstellen. Verwenden Sie die Suche oben, um Produkte auszuw\xe4hlen.","addFirstProduct":"Ihr erstes Produkt hinzuf\xfcgen","removeProduct":"Aus Bundle entfernen","totalProducts":"Keine Produkte | {count} Produkt | {count} Produkte"},"productAssignment":{"buttonAddProduct":"Produkte hinzuf\xfcgen","buttonAdd":"Ausgew\xe4hlte Produkte hinzuf\xfcgen","buttonCancel":"Abbrechen","columnProduct":"Produkt","columnQuantity":"Menge","columnOptional":"Optional","contextMenuRemove":"Entfernen","modalTitle":"Produkte ausw\xe4hlen","emptyTitle":"Keine Produkte hinzugef\xfcgt","emptySubline":"F\xfcge Produkte zu diesem Bundle hinzu"},"bundle":{"product":{"title":"Verf\xfcgbare Bundles"},"tab":{"title":"Bundles"},"discount":{"percentage":"Rabatt","absolute":"Rabatt","off":"Ersparnis"},"products":{"included":"Enthaltene Produkte"},"quantity":"Menge","optional":"Optional","select":"Bundle ausw\xe4hlen","slot":{"bundle_1":"Bundle 1","bundle_2":"Bundle 2","bundle_3":"Bundle 3"}}}}}'),f=JSON.parse('{"digipercep-bundle":{"general":{"mainMenuItemGeneral":"Bundle Products"},"create":{"title":"Create Bundle","cardTitle":"Bundle Information","buttonSave":"Save Bundle","buttonCancel":"Cancel","labelName":"Bundle Name","placeholderName":"Enter bundle name","labelDiscount":"Discount","labelDiscountType":"Discount Type","labelDisplayMode":"Display Mode","labelPriority":"Priority","labelActive":"Active","helpTextSelectable":"Allow customers to select optional products in this bundle","optionPercentage":"Percentage","optionAbsolute":"Fixed Amount","optionDisplayDefault":"Default","optionDisplayPromotionBox":"Promotion Box","errorNameRequired":"Bundle name is required","messageSaveSuccess":"Bundle saved successfully!","messageSaveError":"Failed to save bundle: {error}"},"list":{"title":"Bundle Products","buttonAddBundle":"Add Bundle","columnName":"Name","columnDiscount":"Discount","columnDiscountType":"Type","columnSelectable":"Selectable","columnActive":"Active","emptyTitle":"No bundles found","emptySubline":"Create your first bundle to get started","editAction":"Edit Bundle","deleteAction":"Delete Bundle"},"detail":{"buttonSave":"Save","buttonCancel":"Cancel","tabGeneral":"General","tabProducts":"Products","messageSaveSuccess":"Bundle saved successfully","messageSaveError":"Failed to save bundle","base":{"cardTitle":"Bundle Information","labelName":"Name","placeholderName":"Enter bundle name...","labelActive":"Active","labelDiscount":"Discount","labelDiscountType":"Discount Type","labelSelectable":"Customer can select products","helpTextSelectable":"Allow customers to choose which products they want from this bundle","labelPriority":"Priority","labelDisplayMode":"Display Mode","optionPercentage":"Percentage","optionAbsolute":"Absolute","optionDisplayDefault":"Default","optionDisplayPromotionBox":"Promotion Box"},"products":{"cardTitle":"Bundle Products","selectProducts":"Select Products","selectProductsPlaceholder":"Search and select products to add to bundle","addProducts":"Add Selected Products","columnProduct":"Product","columnQuantity":"Quantity","columnOptional":"Optional","emptyTitle":"No products assigned","emptySubline":"Add products to create your bundle. Select products using the search above.","addFirstProduct":"Add Your First Product","removeProduct":"Remove from Bundle","totalProducts":"No products | {count} product | {count} products"},"productAssignment":{"buttonAddProduct":"Add Products","buttonAdd":"Add Selected Products","buttonCancel":"Cancel","columnProduct":"Product","columnQuantity":"Quantity","columnOptional":"Optional","contextMenuRemove":"Remove","modalTitle":"Select Products","emptyTitle":"No products added","emptySubline":"Add products to this bundle"},"bundle":{"product":{"title":"Available Bundles"},"tab":{"title":"Bundles"},"discount":{"percentage":"discount","absolute":"discount","off":"savings"},"products":{"included":"Included Products"},"quantity":"Quantity","optional":"Optional","select":"Select Bundle","slot":{"bundle_1":"Bundle 1","bundle_2":"Bundle 2","bundle_3":"Bundle 3"}}}}}');let{Module:v}=Shopware;v.register("digipercep-bundle",{type:"plugin",name:"DigiPercep Bundle Products",title:"digipercep-bundle.general.mainMenuItemGeneral",color:"#ff3d58",icon:"regular-shopping-bag",snippets:{"de-DE":g,"en-GB":f},routes:{list:{component:"digipercep-bundle-list",path:"list",meta:{privilege:"bundle:read"}},create:{component:"digipercep-bundle-create",path:"create",meta:{privilege:"bundle:create"}},detail:{component:"digipercep-bundle-detail",path:"detail/:id",meta:{privilege:"bundle:read",parentPath:"digipercep.bundle.list"},redirect:{name:"digipercep.bundle.detail.base"},children:{base:{component:"digipercep-bundle-detail-base",path:"base",meta:{privilege:"bundle:read",parentPath:"digipercep.bundle.list"}},products:{component:"digipercep-bundle-detail-products",path:"products",meta:{privilege:"bundle:read",parentPath:"digipercep.bundle.list"}}}}},navigation:[{label:"digipercep-bundle.general.mainMenuItemGeneral",color:"#ff3d58",path:"digipercep.bundle.list",icon:"default-package-closed",parent:"sw-catalogue",position:100}],settingsItem:{group:"plugins",to:"digipercep.bundle.list",icon:"regular-shopping-bag",privilege:"bundle:read"}});let{Component:y}=Shopware;y.override("sw-product-detail-specifications",{computed:{productForBundles(){return this.$parent?.product||this.$parent?.$parent?.product||this.$root?.product||null}},mounted(){this.$super&&"function"==typeof this.$super&&this.$super("mounted"),this.addBundleAssignmentComponent()},methods:{addBundleAssignmentComponent(){this.$nextTick(()=>{let e=this.$el?.querySelector(".sw-card-view");if(e&&this.productForBundles?.id&&!e.querySelector(".digipercep-product-bundle-assignment")){let t=this.$options.components["digipercep-product-bundle-assignment"]||y.getComponentRegistry().get("digipercep-product-bundle-assignment");if(t){let n=new(this.$root.constructor.extend(t))({parent:this,propsData:{product:this.productForBundles}});n.$mount(),e.appendChild(n.$el)}}})}}})}()}();